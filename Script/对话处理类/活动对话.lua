--======================================================================--
--======================================================================--
local 场景类_NPC活动对话 = class()
local format = string.format
local insert = table.insert
local ceil = math.ceil
local floor = math.floor
local wps = 取物品数据
local typ = type
local 五行_ = {"金","木","水","火","土"}
function 场景类_NPC活动对话:初始化() end

function 场景类_NPC活动对话:活动选项解析(连接id,数字id,序号,内容)
  if 任务数据[玩家数据[数字id].地图单位.标识] == nil then
    return
  end
 local 类型=任务数据[玩家数据[数字id].地图单位.标识].类型
 local 事件=内容[1]
 local 名称=内容[3]
 if 取队长权限(数字id)==false then return  end
  if 类型==4 then
    if 事件=="交出宝藏" then
      战斗准备类:创建战斗(数字id+0,100002,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==22 then
    if 任务数据[玩家数据[数字id].地图单位.标识].玩家id==数字id then
      local 任务id=玩家数据[数字id].地图单位.标识
      if 任务数据[任务id].阶段<4 and 任务数据[任务id].操作 then
        if 事件=="给摇钱树浇水" then
          任务数据[任务id].浇水=任务数据[任务id].浇水+1
          任务数据[任务id].操作=false
          任务数据[任务id].成功操作=任务数据[任务id].成功操作+1
          if 取随机数() >= 1 and 任务数据[任务id].刷出强盗 == nil then
            任务处理类:刷新摇钱树强盗(数字id,任务id)
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截,并且吸引了附近的强盗前来抢劫。")
          else
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截")
          end
        elseif 事件=="给摇钱树施肥" then
          任务数据[任务id].施肥=任务数据[任务id].施肥+1
          任务数据[任务id].操作=false
          任务数据[任务id].成功操作=任务数据[任务id].成功操作+1
          if 取随机数() >= 1 and 任务数据[任务id].刷出强盗 == nil then
            任务处理类:刷新摇钱树强盗(数字id,任务id)
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截,并且吸引了附近的强盗前来抢劫。")
          else
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截")
          end
        elseif 事件=="给摇钱树除虫" then
          任务数据[任务id].除虫=任务数据[任务id].除虫+1
          任务数据[任务id].操作=false
          任务数据[任务id].成功操作=任务数据[任务id].成功操作+1
          if 取随机数() >= 1 and 任务数据[任务id].刷出强盗 == nil then
            任务处理类:刷新摇钱树强盗(数字id,任务id)
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截,并且吸引了附近的强盗前来抢劫。")
          else
            添加最后对话(数字id,"你的摇钱树经过你的悉心照料又长高了一大截")
          end
        end
      elseif 任务数据[任务id].阶段==5 then
        if 任务数据[任务id].次数>0 then
          if 事件=="轻轻摇动" then
            任务处理类:添加摇钱树元宝任务(数字id,{x=任务数据[任务id].x,y=任务数据[任务id].y})
            任务数据[任务id].次数=任务数据[任务id].次数-1
            if 任务数据[任务id].次数<=0 then
              地图处理类:删除单位(任务数据[任务id].地图编号,任务数据[任务id].单位编号)
              玩家数据[数字id].角色:取消任务(任务id)
              if 任务数据[任务id].刷出强盗 ~= nil then
                地图处理类:删除单位(任务数据[任务数据[任务id].刷出强盗].地图编号,任务数据[任务数据[任务id].刷出强盗].单位编号)
                任务数据[任务数据[任务id].刷出强盗]  = nil
                玩家数据[数字id].角色:取消任务(任务数据[任务id].刷出强盗)
              end
              任务数据[任务id]=nil
            else
              添加最后对话(数字id,format("你轻轻摇动了一下树枝，似乎掉下来一些东西。（你还可以摇动#R%s#W次）",任务数据[任务id].次数))
            end
          end
        end
      end
    else
      发送数据(玩家数据[数字id].连接id,1501,{内容="你是谁？我们认识吗#55",模型=任务数据[玩家数据[数字id].地图单位.标识].模型,名称=任务数据[玩家数据[数字id].地图单位.标识].名称})
    end
  elseif 类型==24 then
    if 任务数据[玩家数据[数字id].地图单位.标识].玩家id==数字id then
      if 事件=="纳命来" then
        战斗准备类:创建战斗(数字id+0,100120,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
      end
    end
  elseif 类型==101 then
    if 事件=="少说废话,开打" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y/封妖活动最少要有三人") return  end
      战斗准备类:创建战斗(数字id+0,100004,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==102 then
    if 事件=="我来领养你" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100005,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==104 then
    if 事件=="请星君赐教" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y/挑战本星君最少要有三人") return  end
      if 取等级要求(数字id,40)==false then 常规提示(数字id,"#Y/挑战本星君至少要达到40级") return  end
      战斗准备类:创建战斗(数字id+0,100009,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==105 then
    if 事件=="让我来收拾你" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y/降服妖魔鬼怪最少要有三人") return  end
      if 取等级要求(数字id,40)==false then 常规提示(数字id,"#Y/降服妖魔鬼怪至少要达到40级") return  end
      战斗准备类:创建战斗(数字id+0,100010,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==106 then
    if 事件=="请出招吧" then
      if 玩家数据[数字id].角色:取任务(107) ==0 then 常规提示(数字id,"#Y/你没有领取这样的任务") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y/进行门派闯关活动最少必须由三人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/进行门派闯关活动至少要达到45级") return  end
      --检查任务一致
      local 任务id=玩家数据[数字id].角色:取任务(107)
      for n=1,#队伍数据[玩家数据[数字id].队伍] do
        if 玩家数据[队伍数据[玩家数据[数字id].队伍][n]].角色:取任务(107) ~=任务id then
          常规提示(数字id,"#Y/队伍中有成员任务不一致")
          return
        end
      end
      战斗准备类:创建战斗(数字id+0,100011,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==108 then
    if 事件=="我要报道" then
      if 玩家数据[数字id].角色:取任务(109) ==0 then 常规提示(数字id,"#Y/你没有领取这样的任务") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y/进行游泳比赛活动最少必须由三人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/进行游泳比赛活动至少要达到50级") return  end
      --检查任务一致
      local 任务id=玩家数据[数字id].角色:取任务(109)
      for n=1,#队伍数据[玩家数据[数字id].队伍] do
        if 玩家数据[队伍数据[玩家数据[数字id].队伍][n]].角色:取任务(109) ~=任务id then
          常规提示(数字id,"#Y/队伍中有成员任务不一致")
          return
        end
      end
      local 是否战斗=false
      if 任务数据[玩家数据[数字id].角色:取任务(109)].战斗 or 取随机数()<=60 then
        任务处理类:完成游泳任务(数字id)
      else
        战斗准备类:创建战斗(数字id+0,100012,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
      end
      return
    end
  elseif 类型==110 then
    if 事件=="放肆，看我怎么收拾你" then
      -- if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍~=0 then 常规提示(数字id,"#Y/该任务不允许组队完成") return  end
        战斗准备类:创建战斗(数字id+0,100013,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
        return
      elseif 事件=="请接收物资" then
        任务处理类:完成官职任务(数字id,2)
    end
  elseif 类型==111 then
    if 事件=="放肆，找打" then
      -- if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      --if 玩家数据[数字id].队伍~=0 then 常规提示(数字id,"#Y/该任务不允许组队完成") return  end
      战斗准备类:创建战斗(数字id+0,100016,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    elseif 事件=="不要怕，我来帮你" then
      if 玩家数据[数字id].队伍~=0 then 常规提示(数字id,"#Y/该任务不允许组队完成") return  end
      战斗准备类:创建战斗(数字id+0,100017,玩家数据[数字id].地图单位.标识)
      玩家数据[数字id].地图单位=nil
      return
    elseif 事件=="手底下分高低" then
      战斗准备类:创建战斗(数字id+0,100018,玩家数据[数字id].地图单位.标识)
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==8 then
    if 事件=="回你的地狱去" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==nil then
        常规提示(数字id,"#Y/请先组队！")
        return
      end
      local 符合=false
      for n=1,#任务数据[玩家数据[数字id].地图单位.标识].队伍组 do
        if 任务数据[玩家数据[数字id].地图单位.标识].队伍组[n]==数字id then
          符合=true
        end
      end
      if 符合 then
        战斗准备类:创建战斗(数字id+0,100008,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
      else
        发送数据(玩家数据[数字id].连接id,1501,{内容="你是谁？我们认识吗#55",模型=任务数据[玩家数据[数字id].地图单位.标识].模型,名称=任务数据[玩家数据[数字id].地图单位.标识].名称})
      end
      return
    end
  elseif 类型==11 then
    if 事件=="嗯，你是磊落的侠客，失敬失敬！" or 事件=="哼，你是真的盗贼，我要将你抓捕归案！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==nil then
        常规提示(数字id,"#Y/请先组队！")
        return
      end
      local 符合=false
      for n=1,#任务数据[玩家数据[数字id].地图单位.标识].队伍组 do
        if 任务数据[玩家数据[数字id].地图单位.标识].队伍组[n]==数字id then
          符合=true
        end
      end
      if 符合 then
        战斗准备类:创建战斗(数字id+0,100021,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
      else
        发送数据(玩家数据[数字id].连接id,1501,{内容="你是谁？我们认识吗#55",模型=任务数据[玩家数据[数字id].地图单位.标识].模型,名称=任务数据[玩家数据[数字id].地图单位.标识].名称})
      end
      return
    end
  elseif 类型==12 then
    if 事件=="将偷盗的宝物交出来" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==nil then
        常规提示(数字id,"#Y/请先组队！")
        return
      end
      local 符合=false
      for n=1,#任务数据[玩家数据[数字id].地图单位.标识].队伍组 do
        if 任务数据[玩家数据[数字id].地图单位.标识].队伍组[n]==数字id then
          符合=true
        end
      end
      if 符合 then
        战斗准备类:创建战斗(数字id+0,100022,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
      else
        发送数据(玩家数据[数字id].连接id,1501,{内容="你是谁？我们认识吗#55",模型=任务数据[玩家数据[数字id].地图单位.标识].模型,名称=任务数据[玩家数据[数字id].地图单位.标识].名称})
      end
      return
    end
   elseif 类型==201 then
    if 任务数据[玩家数据[数字id].地图单位.标识].名称=="迷宫土地" then
      if 事件=="我要离开本层迷宫" then
        local 传送地图= 玩家数据[数字id].角色.数据.地图数据.编号
        if 任务数据[玩家数据[数字id].地图单位.标识].真假 then
          传送地图=传送地图+1
        else
          传送地图=传送地图-1
        end
        local xy=地图处理类.地图坐标[传送地图]:取随机点()
        地图处理类:跳转地图(数字id,传送地图,xy.x,xy.y)
        常规提示(数字id,"#Y你来到了#R"..取地图名称(传送地图))
      end
    elseif 任务数据[玩家数据[数字id].地图单位.标识].名称=="迷宫守卫" then
      if 事件=="领取奖励" then
        玩家数据[数字id].道具:迷宫奖励(数字id)
      end
    end
  elseif 类型==205 then
    if 事件=="休得在此放肆" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y降服妖王最少必须由三人进行") return  end
      if 取等级要求(数字id,100)==false then 常规提示(数字id,"#Y/降服妖王至少要达到100级") return  end
      战斗准备类:创建战斗(数字id+0,100020,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==209 then
    if 事件=="我岂是贪污受贿之人" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100026,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    elseif 事件=="既然如此，就留你一条活路" then
      玩家数据[数字id].角色:添加银子(200000,"三界悬赏令",1)
      玩家数据[数字id].角色:取消任务(玩家数据[数字id].地图单位.标识)
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      任务数据[玩家数据[数字id].地图单位.标识]=nil
      return
    end
  elseif 类型==206 then
    if 事件=="我们准备好了" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战世界BOSS最少必须由五人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-20)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+30) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100024,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==210 then
    if 事件=="知了还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由五人进行") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100027,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==123 then
    地图处理类:跳转地图(数字id,6002,26,58)
    玩家数据[数字id].地图单位=nil
  elseif 类型==124 then
    if 事件=="哼，少废话，看打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      if 副本数据.乌鸡国.进行[副本id].序列[任务数据[玩家数据[数字id].地图单位.标识].序列] then 常规提示(数字id,"#Y/你都已经打败过我了，你还要鞭尸吗？？？") return  end
      战斗准备类:创建战斗(数字id+0,100029,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==125 then
    if 事件=="休得在此作恶" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100030,玩家数据[数字id].地图单位.标识)
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==126 then
    if 事件=="我看你就是假的国王" and 玩家数据[数字id].角色:取任务(120) then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100031,玩家数据[数字id].地图单位.标识)
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==127 then
    if 事件=="捡起来,放口袋里" then
      local x银子 = 取随机数(1,50)
      玩家数据[数字id].角色:添加银子(x银子,"地图捡银子",1)
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      任务数据[玩家数据[数字id].地图单位.标识]=nil
      return
    elseif 事件=="捡物品,放口袋里" then
      local x道具格子=玩家数据[数字id].角色:取道具格子()
      if x道具格子==0 then
        常规提示(数字id,"您的道具栏物品已经满啦")
        return
      end
      local x数量 = 取随机数(1,3)
      local 临时品质=0
      local 临时等级=10
      local 物品表={"包子","烤鸭","佛跳墙"}
      local 临时物品=物品表[取随机数(1,#物品表)]
      local x模型 = 任务数据[玩家数据[数字id].地图单位.标识].模型
      if x模型=="食物" then
        物品表={"包子","烤鸭","佛跳墙"}
        临时物品=物品表[取随机数(1,#物品表)]
        if 临时物品~="包子" then
          x数量 =1
          临时品质=取随机数(math.floor(临时等级*0.5),临时等级)
        end
      elseif x模型=="口粮" or x模型=="摄妖香" or x模型=="药品" then
        if x模型=="药品" then
          物品表={"灵脂","曼陀罗花","鬼切草","佛手","四叶花","鬼切草"}
          临时物品=物品表[取随机数(1,#物品表)]
          x数量 =1
          临时品质=取随机数(math.floor(临时等级*0.5),临时等级)
        else
          临时物品=x模型
        end
      end
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      任务数据[玩家数据[数字id].地图单位.标识]=nil
      常规提示(数字id,"#Y/恭喜你得到了"..x数量.."个"..临时物品.."...")
      玩家数据[数字id].道具:给予道具(数字id,临时物品,x数量,临时品质)
      return
    elseif 事件=="抓起来,做宠物" then
      if #玩家数据[数字id].召唤兽.数据<7 then
        local 种类
        if 取随机数(1,150)<=20 then
          种类=true
        end
        local x模型 = 任务数据[玩家数据[数字id].地图单位.标识].模型
        玩家数据[数字id].召唤兽:添加召唤兽(x模型,true,种类,false,0)
        常规提示(数字id,"#Y/你获得了一只"..x模型)
        地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
        任务数据[玩家数据[数字id].地图单位.标识]=nil
      else
        常规提示(数字id,"#Y/对不起!你携带的宝宝已经到达上限了.")
      end
      return
    end
  elseif 类型==128 then
    if 事件=="神仙不做,看来我要抓你回天庭" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      if 取队伍最低等级(玩家数据[数字id].队伍,20) then 常规提示(数字id,"#Y队伍有玩家等级低于20级，无法进入战斗") return end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100032,玩家数据[数字id].地图单位.标识)
      -- 玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==129 then
    if 事件=="三天不打,你又上房揭瓦了?" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      if 取队伍最低等级(玩家数据[数字id].队伍,10) then 常规提示(数字id,"#Y队伍有玩家等级低于10级，无法进入战斗") return end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100033,玩家数据[数字id].地图单位.标识)
      -- 玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==131 then
    if 玩家数据[数字id].车迟对话 then
      游戏活动类:车迟回答题目(数字id,事件,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==132 then
    if 事件=="送我过去" then
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      副本数据.车迟斗法.进行[副本id].进程=4
      任务处理类:设置车迟斗法副本(副本id)
      任务处理类:副本传送(数字id,2)
    end
  elseif 类型==133 then
    if 事件=="我来吃掉你" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100066,玩家数据[数字id].地图单位.标识)
    end
  elseif 类型==134 then
    if 事件=="妖怪找打" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100067,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==135 then
    if 事件=="送我过去" then
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      副本数据.车迟斗法.进行[副本id].进程=6
      任务处理类:设置车迟斗法副本(副本id)
      任务处理类:副本传送(数字id,2)
    end
  elseif 类型==136 then
    if 事件=="送我过去" then
      地图处理类:跳转地图(数字id,1070,125,144)
    end
  elseif 类型==137 then
    if 事件=="上仙莫要助纣为虐" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100068,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==138 then
    if 事件=="妖怪看打" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100069,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==140 then
    if 事件=="在下心平气和，准备好变化(每次需要10点体力)" then
      if 玩家数据[数字id].角色.数据.体力<10 then
        添加最后对话(数字id,"你当前的体力不够，无法变化")
        return
      end
      if 玩家数据[数字id].角色.数据.变身数据~=nil then
        玩家数据[数字id].角色.数据.变身数据=nil
        玩家数据[数字id].角色.数据.变异=nil
        local 任务id = 玩家数据[数字id].角色:取任务(1)
        任务数据[任务id]=nil
        玩家数据[数字id].角色:取消任务(任务id)
      end
      local 造型 = 车迟变身卡范围[取随机数(1,#车迟变身卡范围)]
      玩家数据[数字id].角色.数据.体力=玩家数据[数字id].角色.数据.体力-10
      玩家数据[数字id].角色.数据.变身数据=造型
      玩家数据[数字id].角色.数据.变异=true
      玩家数据[数字id].角色:刷新信息()
      发送数据(玩家数据[数字id].连接id,37,{变身数据=玩家数据[数字id].角色.数据.变身数据,变异=玩家数据[数字id].角色.数据.变异})
      常规提示(数字id,"你心平气和，变化成功")
      发送数据(玩家数据[数字id].连接id,5506,{玩家数据[数字id].角色:取气血数据()})
      发送数据(玩家数据[数字id].连接id,12)
      任务处理类:添加变身(数字id,9)
      地图处理类:更改模型(数字id,{[1]=玩家数据[数字id].角色.数据.变身数据,[2]=玩家数据[数字id].角色.数据.变异},1)
    end
  elseif 类型==141 then
    if 事件=="不知悔改，看我如何收服你" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100070,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==151 then
    local 任务id = 玩家数据[数字id].角色:取任务(150)
    local 副本id=任务数据[任务id].副本id
    local 等级=玩家数据[数字id].角色.数据.等级
    if 事件=="采摘木材" then
      if 取随机数()<=50 then
        战斗准备类:创建战斗(数字id,100112,任务id)
      else
        玩家数据[数字id].角色:添加银子(等级*200,"水陆大会采摘木材银子",1)
        玩家数据[数字id].角色:添加经验(等级*500,"水陆大会采摘木材经验",1)
        任务数据[任务id].装潢=任务数据[任务id].装潢+1
        玩家数据[数字id].采摘木材=nil
        副本数据.水陆大会.进行[副本id].装潢=副本数据.水陆大会.进行[副本id].装潢+1
        常规提示(数字id,"#Y完成了采摘木材，装潢任务进度+1")
        if 副本数据.水陆大会.进行[副本id].装潢>=10 and 副本数据.水陆大会.进行[副本id].邀请>=10 then
          for i,v in pairs(地图处理类.地图单位[6024]) do
            if 地图处理类.地图单位[6024][i].名称 == "蟠桃树" and 任务数据[地图处理类.地图单位[6024][i].id].副本id == 副本id then
              地图处理类:删除单位(6024,i)
              break
            end
          end
          副本数据.水陆大会.进行[副本id].进程=2
          任务处理类:设置水陆大会副本(副本id)
          发送数据(玩家数据[数字id].连接id,1501,{名称="道场督僧",模型="男人_方丈",对话="感谢少侠为水陆大会建设做出的贡献，道场已经建设完毕"})
        end
        玩家数据[数字id].角色:刷新任务跟踪()
      end
    end
  elseif 类型==154 then
    if 事件=="妖怪看打" then
      local 副本id=任务数据[玩家数据[数字id].角色:取任务(150)].副本id
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      if 任务数据[玩家数据[数字id].地图单位.标识].名称=="翼虎将军" then
        if 副本数据.水陆大会.进行[副本id].翼虎 then
          if 副本数据.水陆大会.进行[副本id].击败翼虎 then
            添加最后对话(数字id+0,"少侠饶命！我再也不敢了")
          else
            if 副本数据.水陆大会.进行[副本id].袈裟 then
              任务数据[玩家数据[数字id].地图单位.标识].战斗=true
              战斗准备类:创建战斗(数字id+0,100116,玩家数据[数字id].地图单位.标识)
            else
              添加最后对话(数字id+0,"只有找到观音的袈裟才能降服我")
            end
          end
        else
          任务数据[玩家数据[数字id].地图单位.标识].战斗=true
          战斗准备类:创建战斗(数字id+0,100114,玩家数据[数字id].地图单位.标识)
        end
      else
        if 副本数据.水陆大会.进行[副本id].蝰蛇 then
          if 副本数据.水陆大会.进行[副本id].击败蝰蛇 then
            添加最后对话(数字id+0,"少侠饶命！我再也不敢了")
          else
            if 副本数据.水陆大会.进行[副本id].锡杖 then
              任务数据[玩家数据[数字id].地图单位.标识].战斗=true
              战斗准备类:创建战斗(数字id+0,100117,玩家数据[数字id].地图单位.标识)
            else
              添加最后对话(数字id+0,"只有找到观音的锡杖才能降服我")
            end
          end
        else
          任务数据[玩家数据[数字id].地图单位.标识].战斗=true
          战斗准备类:创建战斗(数字id+0,100115,玩家数据[数字id].地图单位.标识)
        end
      end
      return
    end
  elseif 类型==156 then
    local 任务id = 玩家数据[数字id].角色:取任务(150)
    local 副本id=任务数据[任务id].副本id
    if 事件=="快送我过去" then
      if 副本数据.水陆大会.进行[副本id].进程==6 then
        副本数据.水陆大会.进行[副本id].进程=7
        任务处理类:设置水陆大会副本(副本id)
      end
      地图处理类:跳转地图(数字id,6026,54,91)
    end
  elseif 类型==157 then
    if 事件=="妖孽找死" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      if 取队伍最低等级(玩家数据[数字id].队伍,20) then 常规提示(数字id,"#Y队伍有玩家等级低于20级，无法进入战斗") return end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100118,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==158 then
    if 事件=="除魔卫道是我们应尽的职责" then
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      if 玩家数据[数字id].队伍~= 0 then
        for i=1,#队伍数据[玩家数据[数字id].队伍].成员数据 do
          if 队伍处理类:取是否助战(玩家数据[数字id].队伍,i) == 0 then
            if 玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.副本积分==nil then
              玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.副本积分=0
            end
            if 取随机数(1,100)>=90 then
              if 玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.点化==nil then
                  玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.点化=false
              end
              玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.点化=true
              任务处理类:添加点化任务(队伍数据[玩家数据[数字id].队伍].成员数据[i])
              常规提示(队伍数据[玩家数据[数字id].队伍].成员数据[i],"#Y/五行大师好像找你有事，去找他看看，说不定有意外的惊喜！")
            end
            if 取随机数()>=90 then
              玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].道具:给予道具(队伍数据[玩家数据[数字id].队伍].成员数据[i],"摇钱树苗",1)
              常规提示(队伍数据[玩家数据[数字id].队伍].成员数据[i],"#Y/恭喜你获得了摇钱树苗")
              广播消息({内容=format("#S(副本-水陆大会)#R/%s#Y在水陆大会上表现卓越，最终战胜了#R%s#Y，因此获得了唐王赠送的#G/%s".."#"..取随机数(1,110),玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.名称,"魑魅魍魉","摇钱树苗"),频道="xt"})
            end
            玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.副本积分=玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.副本积分+5
            常规提示(队伍数据[玩家数据[数字id].队伍].成员数据[i],"#Y恭喜你完成了水陆大会副本获得5点副本积分")
            玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色:取消任务(玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色:取任务(150))
            副本数据.水陆大会.完成[副本id]=true
          end
        end
      else
        if 玩家数据[数字id].角色.数据.副本积分==nil then
          玩家数据[数字id].角色.数据.副本积分=0
        end
        if 取随机数(1,100)>=90 then
          任务处理类:添加点化任务(数字id)
          常规提示(数字id,"#Y/五行大师好像找你有事，去找他看看，说不定有意外的惊喜！")
        end
        if 取随机数()>=90 then
          玩家数据[数字id].道具:给予道具(数字id,"摇钱树苗",1)
          常规提示(数字id,"#Y/恭喜你获得了摇钱树苗")
          广播消息({内容=format("#S(副本-水陆大会)#R/%s#Y在水陆大会上表现卓越，最终战胜了#R%s#Y，因此获得了唐王赠送的#G/%s".."#"..取随机数(1,110),玩家数据[数字id].角色.数据.名称,"魑魅魍魉","摇钱树苗"),频道="xt"})
        end
        玩家数据[数字id].角色.数据.副本积分=玩家数据[数字id].角色.数据.副本积分+5
        常规提示(数字id,"#Y恭喜你完成了水陆大会副本获得5点副本积分")
        玩家数据[数字id].角色:取消任务(玩家数据[数字id].角色:取任务(150))
        副本数据.水陆大会.完成[副本id]=true
      end
      地图处理类:跳转地图(数字id,1001,413,70)
    end
  elseif 类型==161 then
    if 事件=="好啊，快出题吧小考官。" then
      local 序列=取随机数(1,#科举题库)
      local 正确答案=科举题库[序列][4]
      local 随机答案={}
      for n=2,4 do
        随机答案[n-1]={答案=科举题库[序列][n],序列=取随机数(1,9999)}
      end
      table.sort(随机答案,function(a,b) return a.序列>b.序列 end )
      local 显示答案={}
      for n=1,3 do
        显示答案[n]=随机答案[n].答案
      end
      if 玩家数据[数字id].通天数据==nil then
        玩家数据[数字id].通天数据={题目=0,答案=0,正确答案=0}
      end
      玩家数据[数字id].通天数据={题目=科举题库[序列][1],答案=显示答案,正确答案=正确答案,任务id=玩家数据[数字id].地图单位.标识}
      玩家数据[数字id].通天对话=true
      添加最后对话(数字id,format("#W/%s", 玩家数据[数字id].通天数据.题目),玩家数据[数字id].通天数据.答案)
    end
  elseif 类型==162 then
    if 事件=="好可爱的小朋友，看的我，变！（会取消原有的变身效果）" then
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      if 玩家数据[数字id].角色.数据.变身数据=="小毛头" or 玩家数据[数字id].角色.数据.变身数据=="小魔头" or 玩家数据[数字id].角色.数据.变身数据=="小仙灵" or 玩家数据[数字id].角色.数据.变身数据=="小丫丫" or 玩家数据[数字id].角色.数据.变身数据=="小精灵" or 玩家数据[数字id].角色.数据.变身数据=="小仙女" then
        常规提示(数字id,"当前已经变化造型，无需再变化")
      else
        if 玩家数据[数字id].角色.数据.变身数据~=nil then
          玩家数据[数字id].角色.数据.变身数据=nil
          玩家数据[数字id].角色.数据.变异=nil
          local 任务id = 玩家数据[数字id].角色:取任务(1)
          任务数据[任务id]=nil
          玩家数据[数字id].角色:取消任务(任务id)
        end
        local 造型 = "小毛头"
        if 玩家数据[数字id].角色.数据.种族=="仙" then
          if 玩家数据[数字id].角色.数据.性别=="女" then
            造型="小仙女"
          else
            造型="小仙灵"
          end
        elseif 玩家数据[数字id].角色.数据.种族=="魔" then
          if 玩家数据[数字id].角色.数据.性别=="女" then
            造型="小精灵"
          else
            造型="小魔头"
          end
        elseif 玩家数据[数字id].角色.数据.种族=="人" then
          if 玩家数据[数字id].角色.数据.性别=="女" then
            造型="小丫丫"
          end
        end
        玩家数据[数字id].角色.数据.变身数据=造型
        玩家数据[数字id].角色.数据.变异=nil
        玩家数据[数字id].角色:刷新信息()
        发送数据(玩家数据[数字id].连接id,37,{变身数据=玩家数据[数字id].角色.数据.变身数据,变异=玩家数据[数字id].角色.数据.变异})
        发送数据(玩家数据[数字id].连接id,5506,{玩家数据[数字id].角色:取气血数据()})
        发送数据(玩家数据[数字id].连接id,12)
        任务处理类:添加变身(数字id,9)
        地图处理类:更改模型(数字id,{[1]=玩家数据[数字id].角色.数据.变身数据,[2]=玩家数据[数字id].角色.数据.变异},1)
        副本数据.通天河.进行[副本id].变身次数=副本数据.通天河.进行[副本id].变身次数+1
        if 副本数据.通天河.进行[副本id].变身次数>=5 then
          for i=1,2 do
            地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,1000-1+i)
          end
          副本数据.通天河.进行[副本id].进程=3
          任务处理类:设置通天河副本(副本id)
        end
        玩家数据[数字id].角色:刷新任务跟踪()
      end
    end
  elseif 类型==163 then
    if 事件=="触摸灵灯" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y/挑战通天河最少要有五人") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/挑战通天河至少要达到60级") return  end
      战斗准备类:创建战斗(数字id+0,100125,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==164 then
    if 事件=="我这就前往" then
      local 副本id=任务数据[玩家数据[数字id].地图单位.标识].副本id
      副本数据.通天河.进行[副本id].进程=5
      任务处理类:设置通天河副本(副本id)
      玩家数据[数字id].角色:刷新任务跟踪()
    end
  elseif 类型==165 then
    if 事件=="小小河妖还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y/挑战通天河最少要有五人") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/挑战通天河至少要达到60级") return  end
      战斗准备类:创建战斗(数字id+0,100126,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==166 then
    if 事件=="那就得罪了" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y/挑战通天河最少要有五人") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/挑战通天河至少要达到60级") return  end
      if 任务数据[玩家数据[数字id].地图单位.标识].名称=="散财童子" then
        战斗准备类:创建战斗(数字id+0,100127,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
        return
      else
        战斗准备类:创建战斗(数字id+0,100128,玩家数据[数字id].地图单位.标识)
        任务数据[玩家数据[数字id].地图单位.标识].战斗=true
        玩家数据[数字id].地图单位=nil
        return
      end
    end
  elseif 类型==169 then
    if 事件=="妖孽受死" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y/挑战通天河最少要有五人") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/挑战通天河至少要达到60级") return  end
      战斗准备类:创建战斗(数字id+0,100130,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==170 then
    if 事件=="妖孽受死" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y/挑战通天河最少要有五人") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/挑战通天河至少要达到60级") return  end
      战斗准备类:创建战斗(数字id+0,100135,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==303 then
    if 事件=="代表月亮消灭你们" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      if 取队伍最低等级(玩家数据[数字id].队伍,20) then 常规提示(数字id,"#Y队伍有玩家等级低于20级，无法进入战斗") return end
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100036,玩家数据[数字id].地图单位.标识)
      return
    end
  elseif 类型==304 then
    if 事件=="我们准备好了" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y挑战地煞星最少必须由五人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-20)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+20) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100037,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==305 then
    if 事件=="小小先锋还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由五人进行") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100038,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==306 then
    if 事件=="小小知了还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由五人进行") return  end
      if 取等级要求(数字id,60)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100039,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==309 then
    if 事件=="邪魔休要猖狂" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100045,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==310 then
    if 事件=="小小土匪也敢欺压百姓" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100046,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==313 then
    if 事件=="战胜心魔，战胜自己" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100047,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==314 then
    if 事件=="请星君赐教" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y挑战天罡星最少必须由五人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-20)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+30) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100056,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==315 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100057,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==316 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100058,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==317 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100059,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==318 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return end
      -- if 玩家数据[数字id].队伍~=0 then 常规提示(数字id,"#Y必须单人才能触发该活动") return end
      if 玩家数据[数字id].队伍~= 0 then
        for i=1,#队伍数据[玩家数据[数字id].队伍].成员数据 do
          if 新手活动[队伍数据[玩家数据[数字id].队伍].成员数据[i]]==nil then
            新手活动[队伍数据[玩家数据[数字id].队伍].成员数据[i]]={次数=0}
          end
          if 新手活动[队伍数据[玩家数据[数字id].队伍].成员数据[i]] ~= nil and 新手活动[队伍数据[玩家数据[数字id].队伍].成员数据[i]].次数 >=50 then
            常规提示(数字id,玩家数据[队伍数据[玩家数据[数字id].队伍].成员数据[i]].角色.数据.名称.."#Y今天已经领满了新手福利") return
          end
        end
      end
      -- if 玩家数据[数字id].角色.数据.等级>50 then 常规提示(数字id,"#Y只有等级低于50级的玩家才能参与该活动") return end
      战斗准备类:创建战斗(数字id+0,100060,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==319 then
    if 事件=="夺取旗子" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能挑战帮派护法") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y挑战帮派护法最少必须由五人进行") return end
      if 玩家数据[数字id].队长 and 玩家数据[数字id].角色.数据.帮战夺旗==1 then 常规提示(数字id,"#Y/你身上已经有了旗子，无法再挑战我！！！") return end
      if 帮派数据[玩家数据[数字id].角色.数据.帮派数据.编号].帮战夺旗次数==2 then 常规提示(数字id,"#Y/贵帮已经夺得了两面旗子，无法继续挑战我！！！") end
      战斗准备类:创建战斗(数字id+0,100062,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==323 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100063,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==324 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100064,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==325 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100065,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==326 then
    if 事件=="青铜还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100071,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==327 then
    if 事件=="白银还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100072,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==328 then
    if 事件=="黄金还这么嚣张？讨打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100073,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==329 then
    if 事件=="不愧是永恒的钻石！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100074,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==330 then
    if 事件=="不愧是至尊星耀！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100075,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==331 then
    if 事件=="摩擦摩擦！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      if 取等级要求(数字id,50)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100076,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==332 then
    if 事件=="互粉互粉！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战该活动最少必须由3-5人进行") return  end
      战斗准备类:创建战斗(数字id+0,100077,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==333 then
    if 事件=="小小元神如此猖狂" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战蚩尤元神最少必须由五人进行") return  end
      if 任务数据[玩家数据[数字id].地图单位.标识].等级==60 then
        if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级+9)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+29) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      elseif 任务数据[玩家数据[数字id].地图单位.标识].等级==100 then
        if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-11)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+9) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      elseif 任务数据[玩家数据[数字id].地图单位.标识].等级==150 then
        if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-41)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+5) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      end
      战斗准备类:创建战斗(数字id+0,100078,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==334 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100080,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==335 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100081,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==336 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<5 then 常规提示(数字id,"#Y挑战福利怪最少必须由五人进行") return  end
      战斗准备类:创建战斗(数字id+0,100082,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==337 then
    if 事件=="我来领取福利" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100084,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==338 then
    if 事件=="还是乖乖的给我钥匙吧" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍~=0 then 常规提示(数字id,"#Y该活动只允许单人触发") return end
      战斗准备类:创建战斗(数字id+0,100091,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==339 then
    if 事件=="我是来打醒你这个丑八怪的" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100093,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==341 then
    if 事件=="我们准备好了" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战次任务最少必须由三人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级-25)==false or 取队伍最高等级(玩家数据[数字id].队伍,任务数据[玩家数据[数字id].地图单位.标识].等级+25) then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100095,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==342 then
    if 事件 == "我想试试我的实力" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战次任务最少必须由三人进行") return  end
      战斗准备类:创建战斗(数字id+0,100096,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==343 then
    if 事件=="除魔卫道" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该任务") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战次任务最少必须由三人进行") return  end
      战斗准备类:创建战斗(数字id+0,100102,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==344 then
    if 事件=="除魔卫道" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该任务") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战次任务最少必须由三人进行") return  end
      战斗准备类:创建战斗(数字id+0,100103,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==345 then
    if 事件=="我要挑战" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该任务") return end
      if 取队伍人数(数字id)<3 then 常规提示(数字id,"#Y挑战次任务最少必须由三人进行") return  end
      if 玩家数据[数字id].角色.数据.七十二地煞 == nil then
         玩家数据[数字id].角色.数据.七十二地煞 = 1
      end
      if 玩家数据[数字id].角色.数据.七十二地煞 < 任务数据[玩家数据[数字id].地图单位.标识].难度 then
        常规提示(数字id,"#Y你当前无法挑战此等级地煞,单价可挑战星级小于"..(玩家数据[数字id].角色.数据.七十二地煞+1).."星的地煞星")
        return
      end
      战斗准备类:创建战斗(数字id+0,100104,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==348 then
    if 事件=="喝就喝、谁怕谁" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100106,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==349 then
    if 事件=="吃你个猪头啊，看打！" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在与战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100107,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      任务数据[玩家数据[数字id].地图单位.标识].触发战斗玩家=数字id
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==350 then
    if 事件=="会不会说人话" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100109,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==351 then
    if 事件=="妖兽看招" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100110,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==352 then
    if 事件=="泼猴看打" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100113,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==355 then
    if 事件=="妖魔看打" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100121,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==356 then
    if 事件=="小小年兽" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<2 then 常规提示(数字id,"#Y挑战次任务最少必须由两人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100122,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==357 then
    if 事件=="打倒年兽" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<2 then 常规提示(数字id,"#Y挑战次任务最少必须由两人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100123,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==358 then
    if 事件=="邪恶年兽休要猖狂" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<2 then 常规提示(数字id,"#Y挑战次任务最少必须由两人进行") return  end
      if 取等级要求(数字id,任务数据[玩家数据[数字id].地图单位.标识].等级)==false then 常规提示(数字id,"#Y/队伍中有成员等级不符合要求") return  end
      战斗准备类:创建战斗(数字id+0,100124,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==362 then
    if 事件=="妖孽休要猖狂" then
      if 任务数据[标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      if 玩家数据[数字id].队伍==0 then 常规提示(数字id,"#Y必须组队才能触发该活动") return end
      if 取队伍人数(数字id)<1 then 常规提示(数字id,"#Y队伍人数低于3人，无法进入战斗") return  end
      任务数据[标识].战斗=true
      战斗准备类:创建战斗(数字id+0,100139,标识)
    end
  elseif 类型==6000 then
    if 事件=="发起攻击（战斗）" then
      if 任务数据[玩家数据[数字id].地图单位.标识].战斗~=nil then 常规提示(数字id,"#Y/对方正在战斗中") return  end
      战斗准备类:创建战斗(数字id+0,100142,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
    end
  elseif 类型==8800 then
    if 事件=="缩手缩脚的还当什么领头人，等本少侠出马，什么妖怪都被斩落马下!先走一步~你就慢慢等吧!" then
      剧情数据[数字id].渡劫.进程=2
      任务处理类:取渡劫任务(数字id)
      添加最后对话(数字id,"啊，少侠、少侠……")
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      玩家数据[数字id].角色:刷新任务跟踪()
    end
  elseif 类型==8804 then
    if 事件=="突然打过来了快挡住！" then
      战斗准备类:创建战斗(数字id+0,100086,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==8808 then
    if 事件=="你这个胡言乱语的混蛋！诬陷我！我砍了你！我要先砍了你！！放手！别阻止我！" then
      战斗准备类:创建战斗(数字id+0,100087,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==8810 then
    if 事件=="我回去找找师傅" then
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      剧情数据[数字id].渡劫.进程=9
      任务处理类:取渡劫任务(数字id)
      玩家数据[数字id].角色:刷新任务跟踪()
      return
    end
  elseif 类型==8811 then
    if 事件=="你这个胡言乱语的混蛋！诬陷我！师傅，他才是蚩尤派来破坏大阵的妖怪！" then
      战斗准备类:创建战斗(数字id+0,100089,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  elseif 类型==8815 then
    if 事件=="好，我们一起" then
      地图处理类:删除单位(任务数据[玩家数据[数字id].地图单位.标识].地图编号,任务数据[玩家数据[数字id].地图单位.标识].单位编号)
      剧情数据[数字id].渡劫.进程=12
      任务处理类:取渡劫任务(数字id)
      玩家数据[数字id].角色:刷新任务跟踪()
      return
    end
  elseif 类型==8816 then
    if 事件=="已经找到了" then
      玩家数据[数字id].给予数据={类型=1,id=0,事件="渡劫任务上交武器"}
      发送数据(玩家数据[数字id].连接id,3507,{道具=玩家数据[数字id].道具:索要道具1(数字id),名称="妄空妖魔",类型="NPC",等级="无"})
      玩家数据[数字id].最后操作=nil
      return
    end
  elseif 类型==8817 then
    if 事件=="我这就去阻止蚩尤的阴谋" then
      if 剧情数据[数字id].渡劫.进程==13 then
        地图处理类:跳转地图(数字id,1206,133,81)
        剧情数据[数字id].渡劫.进程=14
        任务处理类:取渡劫任务(数字id)
        玩家数据[数字id].角色:刷新任务跟踪()
        return
      elseif 剧情数据[数字id].渡劫.进程==14 then
        地图处理类:跳转地图(数字id,1206,133,81)
        return
      end
    end
  elseif 类型==8819 then
    if 事件=="痴心妄想" then
      战斗准备类:创建战斗(数字id+0,100090,玩家数据[数字id].地图单位.标识)
      任务数据[玩家数据[数字id].地图单位.标识].战斗=true
      玩家数据[数字id].地图单位=nil
      return
    end
  end
end
function 场景类_NPC活动对话:更新(dt)end
function 场景类_NPC活动对话:显示(x,y)end
return 场景类_NPC活动对话