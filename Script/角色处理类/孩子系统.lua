--======================================================================--

--======================================================================--
local 孩子系统 = class()
local 资质范围={"攻击资质","防御资质","体力资质","法力资质","速度资质","躲闪资质",}
local 属性范围={"体质","魔力","力量","耐力","敏捷"}
local 培养范围={"根骨","智力","武力","定力","灵敏"}
local bbs = 取宝宝
local rand   = 取随机小数
local cfs    = 删除重复
local ceil  = math.ceil
local insert = table.insert
local remove = table.remove
local floor = math.floor
local 五行_ = {"金","木","水","火","土"}
require("Script/数据中心/梦战召唤兽模型")
function 孩子系统:初始化(id)
  self.数据={}
end

function 孩子系统:加载数据(账号,数字id)
  self.数字id=数字id
  self.数据=table.loadstring(读入文件([[data/]]..账号..[[/]]..数字id..[[/孩子.txt]]))
  for i=1,#self.数据 do
    if 玩家数据[数字id].角色.数据.参战宝宝~=nil and 玩家数据[数字id].角色.数据.参战宝宝.认证码  ~= nil and self.数据[i].认证码==玩家数据[数字id].角色.数据.参战宝宝.认证码 then
      玩家数据[数字id].角色.数据.参战宝宝={}
      self.数据[i].参战信息= nil
      玩家数据[数字id].角色.数据.参战信息=nil
    end
  end
end

function 孩子系统:新增孩子(造型)
  local 编号
  self.数据[#self.数据+1]={
    模型 = 造型,
    名称 = 造型,
    忠诚 = 100,
    等级 = 0,
    潜力 = 0,
    装备 = {},
    染色组 = {},
    装备属性 = {
      气血 = 0,
      魔法 = 0,
      命中 = 0,
      伤害 = 0,
      防御 = 0,
      速度 = 0,
      躲避 = 0,
      灵力 = 0,
      体质 = 0,
      魔力 = 0,
      力量 = 0,
      耐力 = 0,
      敏捷 = 0,
    },
    培养次数 = {
      [1]=0,
      [2]=0,
      [3]=0,
      [4]=0,
      [5]=0,
      [6]=0
    },
    当前经验 = 0,
    寿命=5000,
    五行 = 五行_[取随机数(1,5)]
  }
  编号 = #self.数据
  local qss = 取孩子初始资质(造型)
  self.数据[编号].种类 = "孩子"
  for i=1,#资质范围 do
    self.数据[编号][资质范围[i]] = qss[i] or 0
  end
  self.数据[编号].培养 = {}
  for i=1,#培养范围 do
    self.数据[编号].培养[培养范围[i]] = 0
  end
  self.数据[编号].师门 = "无"
  self.数据[编号].技能 = qss[8]
  self.数据[编号].成长 = qss[7]
  self.数据[编号].参战等级 = 0
  self.数据[编号].出生日期 = os.time()
  self.数据[编号].潜力 = 0
  for i=1,#属性范围 do
    self.数据[编号][属性范围[i]] = qss[9][i+1] or 0
  end
  self.数据[编号].认证码=self.数字id.."_"..os.time()..取随机数(1,999)
  self:刷新信息(编号,"1")
  发送数据(玩家数据[self.数字id].连接id,96.1,self.数据)
end

function 孩子系统:加入门派(编号,门派)
  self.数据[编号].门派 = 门派
  if #self.数据[编号].技能 < 12 then
    self.数据[编号].技能[#self.数据[编号].技能+1] = self:取门派技能(门派)[1]
  else
    self.数据[编号].技能[12] = self:取门派技能(门派)[1]
  end
  常规提示(self.数字id,"#Y恭喜你孩子加入"..门派.."成功,并习得"..self:取门派技能(门派)[1].."技能")
  if self.数据[编号].成年 == nil then
    local 累计培养 = 0
    for i=1,6 do
      累计培养 = 累计培养 + self.数据[编号].培养次数[i]
    end
    local 培养数值 = 0
    for i=1,#培养范围 do
      培养数值 = 培养数值 + self.数据[编号].培养[培养范围[i]]
      self.数据[编号].培养[培养范围[i]] = self.数据[编号].培养[培养范围[i]] +  60
    end
    if 培养数值 >= 220 then
      self.数据[编号].结果 = "三界豪侠"
    else
      if  self.数据[编号].培养.武力 > self.数据[编号].培养.智力 and self.数据[编号].培养.武力 > 135 then
        if self.数据[编号].模型 == "小毛头" or self.数据[编号].模型 == "小丫丫" then
          self.数据[编号].结果 = "江湖豪侠"
        elseif self.数据[编号].模型 == "小仙女" or self.数据[编号].模型 == "小仙灵" then
          self.数据[编号].结果 = "仙族小圣"
        elseif self.数据[编号].模型 == "小魔头" or self.数据[编号].模型 == "小精灵" then
          self.数据[编号].结果 = "小阎王"
        end
      elseif self.数据[编号].培养.智力 > self.数据[编号].培养.武力 and self.数据[编号].培养.智力 > 135 then
        if self.数据[编号].模型 == "小毛头" or self.数据[编号].模型 == "小丫丫" then
          self.数据[编号].结果 = "大诗人"
        elseif self.数据[编号].模型 == "小仙女" or self.数据[编号].模型 == "小仙灵" then
          self.数据[编号].结果 = "文曲星"
        elseif self.数据[编号].模型 == "小魔头" or self.数据[编号].模型 == "小精灵" then
          self.数据[编号].结果 = "混世魔尊"
        end
      elseif self.数据[编号].培养.定力 > self.数据[编号].培养.根骨 and self.数据[编号].培养.定力 > 135 then
        if self.数据[编号].模型 == "小毛头" or self.数据[编号].模型 == "小丫丫" then
          self.数据[编号].结果 = "小神医"
        elseif self.数据[编号].模型 == "小仙女" or self.数据[编号].模型 == "小仙灵" then
          self.数据[编号].结果 = "大天师"
        elseif self.数据[编号].模型 == "小魔头" or self.数据[编号].模型 == "小精灵" then
          self.数据[编号].结果 = "冷判官"
        end
      elseif self.数据[编号].培养.根骨 > self.数据[编号].培养.定力 and self.数据[编号].培养.根骨 > 135 then
        if self.数据[编号].模型 == "小毛头" or self.数据[编号].模型 == "小丫丫" then
          self.数据[编号].结果 = "大学士"
        elseif self.数据[编号].模型 == "小仙女" or self.数据[编号].模型 == "小仙灵" then
          self.数据[编号].结果 = "小财神"
        elseif self.数据[编号].模型 == "小魔头" or self.数据[编号].模型 == "小精灵" then
          self.数据[编号].结果 = "假无常"
        end
      elseif 培养数值 >= 200 then
        self.数据[编号].结果 = "江湖奇侠"
      else
        if self.数据[编号].模型 == "小毛头" or self.数据[编号].模型 == "小丫丫" then
          self.数据[编号].结果 = "禁军斥候"
        elseif self.数据[编号].模型 == "小仙女" or self.数据[编号].模型 == "小仙灵" then
          self.数据[编号].结果 = "蓬莱小仙"
        elseif self.数据[编号].模型 == "小魔头" or self.数据[编号].模型 == "小精灵" then
          self.数据[编号].结果 = "魔界小卒"
        end
      end
    end
    常规提示(self.数字id,"#Y恭喜你孩子成年后所有悟性增加60点")
    self.数据[编号].攻击资质 = self.数据[编号].攻击资质 + 取随机数(self.数据[编号].培养.武力*5,self.数据[编号].培养.武力*10)
    self.数据[编号].防御资质 = self.数据[编号].攻击资质 + 取随机数(self.数据[编号].培养.定力*5,self.数据[编号].培养.定力*10)
    self.数据[编号].法力资质 = self.数据[编号].法力资质 + 取随机数(self.数据[编号].培养.智力*5,self.数据[编号].培养.智力*10)
    self.数据[编号].体力资质 = self.数据[编号].体力资质 + 取随机数(self.数据[编号].培养.根骨*7,self.数据[编号].培养.根骨*15)
    self.数据[编号].速度资质 = self.数据[编号].速度资质 + 取随机数(self.数据[编号].培养.灵敏*5,self.数据[编号].培养.灵敏*10)
    if 累计培养 > 0 then
      self.数据[编号].成长 = self.数据[编号].成长 + 累计培养/100
    end
    self.数据[编号].成年 = true
    常规提示(self.数字id,"#Y恭喜你孩子各项资质大幅度提高")
    self:刷新信息(编号)
    发送数据(玩家数据[self.数字id].连接id,96.2,{数据=玩家数据[self.数字id].孩子.数据[编号],编号=编号})
  end
end

function 孩子系统:取门派技能(门派)
  if 门派 == "大唐官府" then
    return {"后发制人","杀气诀"}
  elseif 门派 == "化生寺" then
    return {"推拿","金刚护体"}
  elseif 门派 == "女儿村" then
    return {"楚楚可怜","百毒不侵"}
  elseif 门派 == "方寸山" then
    return {"定身符","五雷咒"}
  elseif 门派 == "天宫" then
    return {"天雷斩","错乱"}
  elseif 门派 == "普陀山" then
    return {"杨柳甘露","五行制化"}
  elseif 门派 == "龙宫" then
    return {"龙卷雨击","龙腾"}
  elseif 门派 == "五庄观" then
    return {"烟雨剑法","炼气化神"}
  elseif 门派 == "狮驼岭" then
    return {"极度疯狂","威慑"}
  elseif 门派 == "魔王寨" then
    return {"三昧真火","飞砂走石"}
  elseif 门派 == "阴曹地府" then
    return {"修罗隐身","幽冥鬼眼"}
  elseif 门派 == "盘丝洞" then
    return {"勾魂","摄魄"}
  end
end

function 孩子系统:门派技能检查(名称)
  local 门派技能 = {"后发制人","推拿","楚楚可怜","定身符","天雷斩","杨柳甘露","龙卷雨击","烟雨剑法","极度疯狂","三昧真火","修罗隐身","勾魂"}
  for i=1,#门派技能 do
    if 门派技能[i] == 名称 then
      return true
    end
  end
  return false
end

function 孩子系统:洗练处理(连接id,id,内容)
  local 物品=内容.序列
  local bb=内容.序列1
  if 玩家数据[id].角色.数据.道具[物品] == nil then
      常规提示(id,"该物品不存在，学习时请不要移动包裹物品位置")
      return
  end
  local 携带技能 = 玩家数据[id].道具.数据[玩家数据[id].角色.数据.道具[物品]].附带技能
  local 格子编号=0
  if 玩家数据[id].道具.数据[玩家数据[id].角色.数据.道具[物品]]==nil or self.数据[bb]==nil  then
    return
  end
  self.数据[bb].自动指令=nil
  if self.数据[bb].自主打书 == nil then
    self.数据[bb].自主打书 = 0
  end
  local 技能重复 = 0
  if self.数据[bb].技能==nil then
      self.数据[bb].技能[1]=携带技能
  end
  for n=1,#self.数据[bb].技能 do
    if self.数据[bb].技能[n] == 携带技能 then
        技能重复 = n
    end
  end
  if 技能重复 == 0 then
    if self:打书概率(#self.数据[bb].技能) and self.数据[bb].自主打书 < 8 then
      格子编号=#self.数据[bb].技能+1
      常规提示(id,"你的孩子学会了新技能#R/"..携带技能)
      self.数据[bb].自主打书 = self.数据[bb].自主打书 + 1
    else
      格子编号=取随机数(1,#self.数据[bb].技能)
      while self:门派技能检查(self.数据[bb].技能[格子编号]) do
        格子编号=取随机数(1,#self.数据[bb].技能)
      end
      常规提示(id,"你的孩子学会了新技能#R/"..携带技能.."#Y/ 但是遗忘了#R/ "..self.数据[bb].技能[格子编号])
    end
    self.数据[bb].技能[格子编号]=携带技能
    玩家数据[id].道具.数据[玩家数据[id].角色.数据.道具[物品]]=nil
    玩家数据[id].角色.数据.道具[物品]=nil
    发送数据(连接id,3699)
  else
    常规提示(id,"你的孩子已学会该技能,无法再学习")
  end
end

function 孩子系统:每日奖励(id,编号)
  if self.数据[编号] ~= nil then
    local 等级 = self.数据[编号].等级
    if self.数据[编号].门派 == "大唐官府" then
      local 临时等级 = 80
      if 等级 <= 80 then
        临时等级 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时等级 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时等级 = 取随机数(13,15)*10
      else
        临时等级 = 取随机数(13,16)*10
      end
      for i=1,2 do
        local 类型 = "神兵图鉴"
        if 取随机数() <= 50 then
          类型 = "灵宝图鉴"
        end
        玩家数据[id].道具:给予道具(id,类型,1,临时等级)
      end
      常规提示(id,"#Y你获得了2个图鉴")
    elseif self.数据[编号].门派 == "化生寺" then
      local 物品表={"金创药","金创药","金创药","金香玉","金创药","金创药","小还丹","金创药","金创药","千年保心丹","金创药","金创药","风水混元丹","金创药","金创药","定神香","金创药","金创药","蛇蝎美人","金创药","金创药","九转回魂丹","金创药","金创药","佛光舍利子","金创药","金创药","十香返生丸","金创药","金创药","金创药","金创药","五龙丹"}
      local 临时品质 = 80
      if 等级 <= 80 then
        临时品质 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时品质 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时品质 = 取随机数(13,15)*10
      else
        临时品质 = 取随机数(13,16)*10
      end
      for i=1,2 do
        玩家数据[id].道具:给予道具(id,物品表[取随机数(1,#物品表)],1,临时品质)
      end
      常规提示(id,"#Y你获得了2个药品")
    elseif self.数据[编号].门派 == "女儿村" then
      local 物品表={"烤肉","醉生梦死","蛇胆酒","百味酒","梅花酒","长寿面","翡翠豆腐","桂花丸","佛跳墙","佛跳墙","佛跳墙","珍露酒","烤鸭","烤鸭","豆斋果","烤鸭","臭豆腐","佛跳墙","包子","烤鸭","虎骨酒","包子","女儿红"}
      local 临时品质 = 80
      if 等级 <= 80 then
        临时品质 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时品质 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时品质 = 取随机数(13,15)*10
      else
        临时品质 = 取随机数(13,16)*10
      end
      for i=1,2 do
        玩家数据[id].道具:给予道具(id,物品表[取随机数(1,#物品表)],1,临时品质)
      end
      常规提示(id,"#Y你获得了2个烹饪")
    elseif self.数据[编号].门派 == "方寸山" then
      local 数量 = 5
      if 等级 <= 80 then
        数量 = 取随机数(8,12)
      elseif 等级 <= 120 then
        数量 = 取随机数(12,20)
      elseif 等级 <= 150 then
        数量 = 取随机数(20,30)
      else
        数量 = 取随机数(30,40)
      end
      玩家数据[id].道具:给予道具(id,"飞行符",数量)
      常规提示(id,"#Y你获得了飞行符*"..数量)
    elseif self.数据[编号].门派 == "天宫" then
      local 数量 = 2
      if 等级 <= 80 then
        数量 = 取随机数(2,5)
      elseif 等级 <= 120 then
        数量 = 取随机数(5,8)
      elseif 等级 <= 150 then
        数量 = 取随机数(8,10)
      else
        数量 = 取随机数(10,15)
      end
      玩家数据[id].道具:给予道具(id,"天眼通符",数量)
      常规提示(id,"#Y你获得了天眼通符*"..数量)
    elseif self.数据[编号].门派 == "普陀山" then
      local 物品表={"金创药","金创药","金创药","金香玉","金创药","金创药","小还丹","金创药","金创药","千年保心丹","金创药","金创药","风水混元丹","金创药","金创药","定神香","金创药","金创药","蛇蝎美人","金创药","金创药","九转回魂丹","金创药","金创药","佛光舍利子","金创药","金创药","十香返生丸","金创药","金创药","金创药","金创药","五龙丹"}
      local 临时品质 = 80
      if 等级 <= 80 then
        临时品质 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时品质 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时品质 = 取随机数(13,15)*10
      else
        临时品质 = 取随机数(13,16)*10
      end
      for i=1,2 do
        玩家数据[id].道具:给予道具(id,物品表[取随机数(1,#物品表)],1,临时品质)
      end
      常规提示(id,"#Y你获得了2个药品")
    elseif self.数据[编号].门派 == "龙宫" then
      local 临时等级 = 80
      if 等级 <= 80 then
        临时等级 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时等级 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时等级 = 取随机数(13,15)*10
      else
        临时等级 = 取随机数(13,16)*10
      end
      玩家数据[id].道具:给予道具(id,"强化符",1,临时等级,"龙附")
      常规提示(id,"#Y你获得了1张龙附强化符")
    elseif self.数据[编号].门派 == "五庄观" then
      local 数量 = 1
      if 等级 <= 80 then
        数量 = 取随机数(1,2)
      elseif 等级 <= 120 then
        数量 = 取随机数(2,3)
      elseif 等级 <= 150 then
        数量 = 取随机数(3,4)
      else
        数量 = 取随机数(4,5)
      end
      for i=1,数量 do
        if 取随机数() <= 10 then
          玩家数据[id].道具:给予道具(id,"高级藏宝图",0)
        else
          玩家数据[id].道具:给予道具(id,"藏宝图",0)
        end
      end
      常规提示(id,"#Y/你获得了"..数量.."张藏宝图")
    elseif self.数据[编号].门派 == "狮驼岭" then
      if #玩家数据[id].召唤兽.数据 < 7 then
        local 类型=取等级怪(取随机数(75,155))
        类型=取敌人信息(类型[取随机数(1,#类型)])
        玩家数据[id].召唤兽:添加召唤兽(类型[2],"宝宝",nil,nil,0,nil,nil,nil)
        常规提示(id,"#Y/你获得了一个召唤兽")
      end
    elseif self.数据[编号].门派 == "魔王寨" then
      local 临时等级 = 80
      if 等级 <= 80 then
        临时等级 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时等级 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时等级 = 取随机数(13,15)*10
      else
        临时等级 = 取随机数(13,16)*10
      end
      玩家数据[id].道具:给予道具(id,"强化符",1,临时等级,"魔王护持")
      常规提示(id,"#Y你获得了1张魔王护持强化符")
    elseif self.数据[编号].门派 == "阴曹地府" then
      local 临时等级 = 80
      if 等级 <= 80 then
        临时等级 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时等级 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时等级 = 取随机数(13,15)*10
      else
        临时等级 = 取随机数(13,16)*10
      end
      for i=1,2 do
        local 类型 = "神兵图鉴"
        if 取随机数() <= 50 then
          类型 = "灵宝图鉴"
        end
        玩家数据[id].道具:给予道具(id,类型,1,临时等级)
      end
      常规提示(id,"#Y你获得了2个图鉴")
    elseif self.数据[编号].门派 == "盘丝洞" then
      local 临时等级 = 80
      if 等级 <= 80 then
        临时等级 = 取随机数(8,12)*10
      elseif 等级 <= 120 then
        临时等级 = 取随机数(12,14)*10
      elseif 等级 <= 150 then
        临时等级 = 取随机数(13,15)*10
      else
        临时等级 = 取随机数(13,16)*10
      end
      玩家数据[id].道具:给予道具(id,"强化符",1,临时等级,"盘丝舞")
      常规提示(id,"#Y你获得了1张盘丝舞强化符")
    else
      常规提示(id,"#Y你的孩子好像没有门派哟")
      return
    end
    self.数据[编号].领取 = os.date("%d", os.time())
  end
end


function 孩子系统:刷新信息(编号,是否)
  self.数据[编号].最大气血 = ceil(self.数据[编号].等级*self.数据[编号].体力资质/1000+self.数据[编号].体质*self.数据[编号].成长*6) + self.数据[编号].装备属性.气血
  self.数据[编号].最大魔法 = ceil(self.数据[编号].等级*self.数据[编号].法力资质/500+self.数据[编号].魔力*self.数据[编号].成长*3) + self.数据[编号].装备属性.魔法
  self.数据[编号].伤害 = ceil(self.数据[编号].等级*self.数据[编号].攻击资质*(self.数据[编号].成长+1.4)/750+self.数据[编号].力量*self.数据[编号].成长 + self.数据[编号].装备属性.命中/4+self.数据[编号].体质*0.3) + self.数据[编号].装备属性.伤害
  self.数据[编号].防御 = ceil(self.数据[编号].等级*self.数据[编号].防御资质*(self.数据[编号].成长+1.4)/1143+self.数据[编号].耐力*(self.数据[编号].成长-1/253)*253/190)+ self.数据[编号].装备属性.防御
  self.数据[编号].速度 = ceil(self.数据[编号].速度资质 *self.数据[编号].敏捷/1000)  + self.数据[编号].装备属性.速度
  self.数据[编号].灵力 = ceil(self.数据[编号].等级*(self.数据[编号].法力资质+1666)/3333+self.数据[编号].魔力*self.数据[编号].成长+self.数据[编号].力量*0.4+self.数据[编号].体质*0.3+self.数据[编号].耐力*0.2) + self.数据[编号].装备属性.灵力
  if  self.数据[编号].等级 <= 185 then
    self.数据[编号].最大经验 = self:取经验(2,self.数据[编号].等级)
  end
  if self:取指定技能(编号,"高级隐身") then
    self.数据[编号].伤害=self.数据[编号].伤害-math.floor(self.数据[编号].伤害*0.2)
  elseif self:取指定技能(编号,"隐身") then
    self.数据[编号].伤害=self.数据[编号].伤害-math.floor(self.数据[编号].伤害*0.2)
  end
  if self:取指定技能(编号,"高级强力") then
    self.数据[编号].伤害=self.数据[编号].伤害+math.floor(self.数据[编号].等级*0.715)
  elseif self:取指定技能(编号,"强力") then
    self.数据[编号].伤害=self.数据[编号].伤害+math.floor(self.数据[编号].等级*0.52)
  end
  if self:取指定技能(编号,"高级防御") then
    self.数据[编号].防御=self.数据[编号].防御+math.floor(self.数据[编号].等级*0.8)
  elseif self:取指定技能(编号,"防御") then
    self.数据[编号].防御=self.数据[编号].防御+math.floor(self.数据[编号].等级*0.6)
  end
  if self:取指定技能(编号,"高级敏捷") then
    self.数据[编号].速度=self.数据[编号].速度+math.floor(self.数据[编号].速度*0.1)
  elseif self:取指定技能(编号,"敏捷") then
    self.数据[编号].速度=self.数据[编号].速度+math.floor(self.数据[编号].速度*0.2)
  end
  if self:取指定技能(编号,"迟钝") then
    self.数据[编号].速度=self.数据[编号].速度-math.floor(self.数据[编号].速度*0.2)
  end
  if self:取指定技能(编号,"千锤百炼") then
    self.数据[编号].最大气血=self.数据[编号].最大气血+math.floor(self.数据[编号].等级*10)
    self.数据[编号].防御=self.数据[编号].防御+math.floor(self.数据[编号].等级*5)
  end
  if self:取指定技能(编号,"赴汤蹈火") then
    self.数据[编号].最大气血=self.数据[编号].最大气血+math.floor(self.数据[编号].等级*10)
  end
  if self:取指定技能(编号,"开门见山") then
    self.数据[编号].伤害 = self.数据[编号].伤害 + self.数据[编号].等级
    self.数据[编号].最大气血=self.数据[编号].最大气血+math.floor(self.数据[编号].等级*10)
  end
  if self.数据[编号].结果 ~= nil then
    if self.数据[编号].结果 == "三界豪侠" then
      self.数据[编号].最大气血 = math.floor(self.数据[编号].最大气血*1.1)
      self.数据[编号].最大魔法 = math.floor(self.数据[编号].最大魔法*1.1)
      self.数据[编号].伤害 = math.floor(self.数据[编号].伤害*1.1)
      self.数据[编号].防御 = math.floor(self.数据[编号].防御*1.1)
      self.数据[编号].速度 = math.floor(self.数据[编号].速度*1.1)
      self.数据[编号].灵力 = math.floor(self.数据[编号].灵力*1.1)
    elseif self.数据[编号].结果 == "江湖奇侠" then
      self.数据[编号].最大气血 = math.floor(self.数据[编号].最大气血*1.05)
      self.数据[编号].最大魔法 = math.floor(self.数据[编号].最大魔法*1.05)
      self.数据[编号].伤害 = math.floor(self.数据[编号].伤害*1.05)
      self.数据[编号].防御 = math.floor(self.数据[编号].防御*1.05)
      self.数据[编号].速度 = math.floor(self.数据[编号].速度*1.05)
      self.数据[编号].灵力 = math.floor(self.数据[编号].灵力*1.05)
    elseif self.数据[编号].结果 == "江湖豪侠" or self.数据[编号].结果 == "仙族小圣"or self.数据[编号].结果 == "小阎王"then
      self.数据[编号].伤害 = math.floor(self.数据[编号].伤害*1.15)
    elseif self.数据[编号].结果 == "大诗人" or self.数据[编号].结果 == "文曲星"or self.数据[编号].结果 == "混世魔尊"then
      self.数据[编号].灵力 = math.floor(self.数据[编号].灵力*1.15)
    elseif self.数据[编号].结果 == "小神医" or self.数据[编号].结果 == "大天师"or self.数据[编号].结果 == "冷判官"then
      self.数据[编号].防御 = math.floor(self.数据[编号].防御*1.2)
    elseif self.数据[编号].结果 == "大学士" or self.数据[编号].结果 == "小财神"or self.数据[编号].结果 == "假无常"then
      self.数据[编号].最大气血 = math.floor(self.数据[编号].最大气血*1.15)
    end
  end
  if 是否 == "1" then
    self.数据[编号].气血 = self.数据[编号].最大气血
    self.数据[编号].魔法 = self.数据[编号].最大魔法
  end
  if self.数据[编号].气血 > self.数据[编号].最大气血 then
    self.数据[编号].气血 = self.数据[编号].最大气血
  end
  if self.数据[编号].魔法 > self.数据[编号].最大魔法 then
    self.数据[编号].魔法 = self.数据[编号].最大魔法
  end
end

function 孩子系统:穿戴装备(装备,格子,编号)
  if 装备.气血 ~= nil then
    self.数据[编号].装备属性.气血 = self.数据[编号].装备属性.气血 + (装备.气血 or 0)
  end
  if 装备.魔法 ~= nil then
    self.数据[编号].装备属性.魔法 = self.数据[编号].装备属性.魔法 + (装备.魔法 or 0)
  end
  if 装备.命中 ~= nil then
    self.数据[编号].装备属性.命中 = self.数据[编号].装备属性.命中 + (装备.命中 or 0)
  end
  if 装备.伤害 ~= nil then
    self.数据[编号].装备属性.伤害 = self.数据[编号].装备属性.伤害 + (装备.伤害 or 0)
  end
  if 装备.防御 ~= nil then
    self.数据[编号].装备属性.防御 = self.数据[编号].装备属性.防御 + (装备.防御 or 0)
  end
  if 装备.速度 ~= nil then
    self.数据[编号].装备属性.速度 = self.数据[编号].装备属性.速度 + (装备.速度 or 0)
  end
  if 装备.躲避 ~= nil then
    self.数据[编号].装备属性.躲避 = self.数据[编号].装备属性.躲避 + (装备.躲避 or 0)
  end
  if 装备.灵力 ~= nil then
    self.数据[编号].装备属性.灵力 = self.数据[编号].装备属性.灵力 + (装备.灵力 or 0)
  end
  if 装备.体质 ~= nil then
    self.数据[编号].装备属性.体质 = self.数据[编号].装备属性.体质 + (装备.体质 or 0)
    self.数据[编号].装备属性.气血 = self.数据[编号].装备属性.气血 + (装备.体质 or 0)*5
  end
  if 装备.魔力 ~= nil then
    self.数据[编号].装备属性.魔力 = self.数据[编号].装备属性.魔力 + (装备.魔力 or 0)
    self.数据[编号].装备属性.魔法 = self.数据[编号].装备属性.魔法 + (装备.魔力 or 0)*5
    self.数据[编号].装备属性.灵力 = self.数据[编号].装备属性.灵力 + floor(((装备.魔力 or 0)*1.5))
  end
  if 装备.力量 ~= nil then
    self.数据[编号].装备属性.力量 = self.数据[编号].装备属性.力量 + (装备.力量 or 0)
    self.数据[编号].装备属性.伤害 = self.数据[编号].装备属性.伤害 + floor(((装备.力量 or 0)*3.5))
  end
  if 装备.耐力 ~= nil then
    self.数据[编号].装备属性.耐力 = self.数据[编号].装备属性.耐力 + (装备.耐力 or 0)
    self.数据[编号].装备属性.防御 = self.数据[编号].装备属性.防御 + floor(((装备.耐力 or 0)*2.3))
  end
  if 装备.敏捷 ~= nil then
    self.数据[编号].装备属性.敏捷 = self.数据[编号].装备属性.敏捷 + (装备.敏捷 or 0)
    self.数据[编号].装备属性.速度 = self.数据[编号].装备属性.速度 + floor(((装备.敏捷 or 0)*2.3))
  end
  self.数据[编号].装备[格子] = 装备
  if 装备.套装效果 ~= nil then
    local sl = {}
    local ab = true
    self.数据[编号].套装 = self.数据[编号].套装 or {}
    for i=1,#self.数据[编号].套装 do
      if self.数据[编号].套装[i][1] == 装备.套装效果[1] and self.数据[编号].套装[i][2] == 装备.套装效果[2] then
        local abc = false
        local abd = true
        for s=1,#self.数据[编号].套装[i][4] do
          if self.数据[编号].套装[i][4][s] == 格子 then
              abd = false
              break
          end
        end
        if abd then
          insert(self.数据[编号].套装[i][4],格子)
          abc = true
        end
        if abc then
          self.数据[编号].套装[i][3] = (self.数据[编号].套装[i][3] or 0) + 1
        end
        ab = false
        break
      end
    end
    if ab then
      insert(self.数据[编号].套装,{装备.套装效果[1],装备.套装效果[2],1,{格子}})
    end
  end
  self:刷新信息(编号)
end

function 孩子系统:卸下装备(装备,格子,编号)
  if 装备.气血 ~= nil then
    self.数据[编号].装备属性.气血 = self.数据[编号].装备属性.气血 - (装备.气血 or 0)
  end
  if 装备.魔法 ~= nil then
    self.数据[编号].装备属性.魔法 = self.数据[编号].装备属性.魔法 - (装备.魔法 or 0)
  end
  if 装备.命中 ~= nil then
    self.数据[编号].装备属性.命中 = self.数据[编号].装备属性.命中 - (装备.命中 or 0)
  end
  if 装备.伤害 ~= nil then
    self.数据[编号].装备属性.伤害 = self.数据[编号].装备属性.伤害 - (装备.伤害 or 0)
  end
  if 装备.防御 ~= nil then
    self.数据[编号].装备属性.防御 = self.数据[编号].装备属性.防御 - (装备.防御 or 0)
  end
  if 装备.速度 ~= nil then
    self.数据[编号].装备属性.速度 = self.数据[编号].装备属性.速度 - (装备.速度 or 0)
  end
  if 装备.躲避 ~= nil then
    self.数据[编号].装备属性.躲避 = self.数据[编号].装备属性.躲避 - (装备.躲避 or 0)
  end
  if 装备.灵力 ~= nil then
    self.数据[编号].装备属性.灵力 = self.数据[编号].装备属性.灵力 - (装备.灵力 or 0)
  end
  if 装备.体质 ~= nil then
    self.数据[编号].装备属性.体质 = self.数据[编号].装备属性.体质 - (装备.体质 or 0)
    self.数据[编号].装备属性.气血 = self.数据[编号].装备属性.气血 - (装备.体质 or 0)*5
  end
  if 装备.魔力 ~= nil then
    self.数据[编号].装备属性.魔力 = self.数据[编号].装备属性.魔力 - (装备.魔力 or 0)
    self.数据[编号].装备属性.魔法 = self.数据[编号].装备属性.魔法 - (装备.魔力 or 0)*5
    self.数据[编号].装备属性.灵力 = self.数据[编号].装备属性.灵力 - floor(((装备.魔力 or 0)*1.5))
  end
  if 装备.力量 ~= nil then
    self.数据[编号].装备属性.力量 = self.数据[编号].装备属性.力量 - (装备.力量 or 0)
    self.数据[编号].装备属性.伤害 = self.数据[编号].装备属性.伤害 - floor(((装备.力量 or 0)*3.5))
  end
  if 装备.耐力 ~= nil then
    self.数据[编号].装备属性.耐力 = self.数据[编号].装备属性.耐力 - (装备.耐力 or 0)
    self.数据[编号].装备属性.防御 = self.数据[编号].装备属性.防御 - floor(((装备.耐力 or 0)*2.3))
  end
  if 装备.敏捷 ~= nil then
    self.数据[编号].装备属性.敏捷 = self.数据[编号].装备属性.敏捷 - (装备.敏捷 or 0)
    self.数据[编号].装备属性.速度 = self.数据[编号].装备属性.速度 - floor(((装备.敏捷 or 0)*2.3))
  end
  if 装备.套装效果 ~= nil then
    local sl = {}
    local ab = false
    self.数据[编号].套装 = self.数据[编号].套装 or {}
    for i=1,#self.数据[编号].套装 do
      if self.数据[编号].套装[i][1] == 装备.套装效果[1] and self.数据[编号].套装[i][2] == 装备.套装效果[2] then
        local abc = false
        local abd = true
        for s=1,#self.数据[编号].套装[i][4] do
          if self.数据[编号].套装[i][4][s] == 格子 then
            abd = true
            break
          end
        end
        if abd then
          remove(self.数据[编号].套装[i][4],格子)
          abc = true
        end
        if abc then
          self.数据[编号].套装[i][3] = (self.数据[编号].套装[i][3] or 0) - 1
        end
        if self.数据[编号].套装[i][3]==0 then
          ab = true
          break
        end
      end
    end
    if ab then
      self.数据[编号].套装={}
    end
  end
  self:刷新信息(编号)
end


function 孩子系统:重置等级(等级,编号)
  for n=1,5 do
    self.数据[编号][属性范围[n]]=self.数据[编号][属性范围[n]]+等级
  end
  self.数据[编号].潜力=等级*5
  self.数据[编号].等级=等级
  if self.数据[编号].加点方案 ~= nil then
    for n=1,等级 do
      for i=1,5 do
        if self.数据[编号].加点方案[i] ~= nil then
          self.数据[编号][属性范围[i]]=self.数据[编号][属性范围[i]]+self.数据[编号].加点方案[i]
        end
      end
    end
  end
  self:刷新信息(编号,"1")
end

function 孩子系统:取指定技能(编号,名称)
  for n=1,#self.数据[编号].技能 do
    if self.数据[编号].技能[n]==名称 then
      return true
    end
  end
  return false
end


function 孩子系统:取存档数据(编号)
  if 编号 ~= nil then
    return self.数据[编号]
  end
  return self.数据
end

function 孩子系统:获取指定数据(编号)
  return table.tostring(self.数据[编号])
end

function 孩子系统:放生处理(连接id,序号,id,点数)
  local 临时编号=self:取编号(点数.序列)
  if 临时编号==0 then
    常规提示(id,"你没有这只召唤兽")
    return
  elseif self:是否有装备(临时编号) then
    常规提示(id,"请先卸下召唤兽所穿戴的装备")
    return
  elseif  self.数据[临时编号].统御 ~= nil then
    常规提示(id,"该召唤兽处于统御状态,请解除统御后再进行此操作")
    return
  else--先判断是否有bb装备
    --       self.数据[临时编号]=nil
    table.remove(self.数据,临时编号) --先抹去参战信息
    if 点数.序列==玩家数据[id].角色.数据.参战宝宝.认证码 then
      玩家数据[id].角色.数据.参战宝宝={}
      发送数据(连接id,18,玩家数据[id].角色.数据.参战宝宝)
    end
    常规提示(id,"你的这只召唤兽从你的眼前消失了~~")
    发送数据(连接id,21,临时编号)
  end
end

function 孩子系统:删除处理(id,临时编号)
  --local 临时编号=self:取编号(点数.序列)
  if 临时编号==0 then
    常规提示(id,"你没有这只召唤兽")
    return
  else--先判断是否有bb装备
    --       self.数据[临时编号]=nil
    if self.数据[临时编号].认证码==玩家数据[id].角色.数据.参战宝宝.认证码 then
      玩家数据[id].角色.数据.参战宝宝={}
      发送数据(玩家数据[id].连接id,18,玩家数据[id].角色.数据.参战宝宝)
    end
    table.remove(self.数据,临时编号)--先抹去参战信息
    发送数据(玩家数据[id].连接id,45,临时编号)
  end
end

function 孩子系统:是否有装备(编号)
  if self.数据[编号]==nil then
    return false
  end
  for n=1,3 do
    if  self.数据[编号].装备[n]~=nil then
      return true
    end
  end
  return false
end

function 孩子系统:耐久处理(id,认证码)
  local 编号 = self:取编号(认证码)
  if self:是否有装备(编号) then
    for n=1,3 do
      if self.数据[编号].装备[n]~=nil and self.数据[编号].装备[n].耐久~=nil then
        self.数据[编号].装备[n].耐久 = self.数据[编号].装备[n].耐久 - 0.0125
        if self.数据[编号].装备[n].耐久 <= 0 then
            self.数据[编号].装备[n].耐久 = 0
            发送数据(玩家数据[id].连接id,7,"#y/你的#r/"..self.数据[编号].装备[n].名称.."#y/因耐久度过低已无法使用")
        end
      end
    end
  end
end

function 孩子系统:取气血差()
  local 数值=0
  for n=1,#self.数据 do
    数值=数值+(self.数据[n].最大气血-self.数据[n].气血)
  end
  return 数值
end

function 孩子系统:取魔法差()
  local 数值=0
  for n=1,#self.数据 do
    数值=数值+(self.数据[n].最大魔法-self.数据[n].魔法)
  end
  return 数值
end

function 孩子系统:取忠诚差()
  local 数值=0
  for n=1,#self.数据 do
    数值=数值+(100-self.数据[n].忠诚)
  end
  return 数值
end

function 孩子系统:取野外等级差(地图等级,玩家等级)
  local 等级=math.abs(地图等级-玩家等级)
  if 等级<=5 then
    return 1
  elseif 等级<=10 then
    return 0.8
  elseif 等级<=20 then
    return 0.5
  else
    return 0.2
  end
end

function 孩子系统:获得经验(认证码,经验,id,类型,地图等级)

end

function 孩子系统:升级(编号,id)
  if self.数据[编号].等级 > 玩家数据[id].角色.数据.等级 + 5 then
    return
  end
  self.数据[编号].等级 = self.数据[编号].等级 + 1
  self.数据[编号].体质 = self.数据[编号].体质 + 1
  self.数据[编号].魔力 = self.数据[编号].魔力 + 1
  self.数据[编号].力量 = self.数据[编号].力量 + 1
  self.数据[编号].耐力 = self.数据[编号].耐力 + 1
  self.数据[编号].敏捷 = self.数据[编号].敏捷 + 1
  self.数据[编号].潜力 = self.数据[编号].潜力 + 5
  self.数据[编号].当前经验 = 0
  if self.数据[编号].加点方案 ~= nil then
    for i=1,5 do
      if self.数据[编号].加点方案[i] ~= nil and self.数据[编号].潜力 > 0 then
        self.数据[编号][属性范围[i]]=self.数据[编号][属性范围[i]]+self.数据[编号].加点方案[i]
        self.数据[编号].潜力 = self.数据[编号].潜力 - self.数据[编号].加点方案[i]
      end
    end
  end
  if self.数据[编号].等级 == 120 and self.数据[编号].门派 ~= nil then
    self:添加技能(self:取门派技能(self.数据[编号].门派)[2],编号)
  end
  self:刷新信息(编号,"1")
  发送数据(玩家数据[id].连接id,96.2,{数据=self.数据[编号],编号=编号})
end

function 孩子系统:降级(级数,编号)
  self.数据[编号].等级 = self.数据[编号].等级 - 级数
  self.数据[编号].体质=0
  self.数据[编号].魔力=0
  self.数据[编号].力量=0
  self.数据[编号].耐力=0
  self.数据[编号].敏捷=0
  self.数据[编号].潜力=0
  self.数据[编号].体质=self.数据[编号].等级+20
  self.数据[编号].魔力=self.数据[编号].等级+20
  self.数据[编号].力量=self.数据[编号].等级+20
  self.数据[编号].耐力=self.数据[编号].等级+20
  self.数据[编号].敏捷=self.数据[编号].等级+20
  self.数据[编号].潜力=self.数据[编号].等级*5
  if self.数据[编号].加点方案 ~= nil then
    for n=1,self.数据[编号].等级 do
      for i=1,5 do
        if self.数据[编号].加点方案[i] ~= nil and self.数据[编号].潜力 > 0 then
          self.数据[编号][属性范围[i]]=self.数据[编号][属性范围[i]]+self.数据[编号].加点方案[i]
          self.数据[编号].潜力 = self.数据[编号].潜力 - self.数据[编号].加点方案[i]
        end
      end
    end
  end
  self:刷新信息(编号,"1")
end

function 孩子系统:添加技能(名称,编号)
  self.数据[编号].技能[#self.数据[编号].技能+1] = 名称
end

function 孩子系统:添加经验(连接id,id,编号,数额)

end

function 孩子系统:加血处理(编号,数额,连接id,id)
  self.数据[编号].气血=self.数据[编号].气血+数额
  if self.数据[编号].气血>self.数据[编号].最大气血 then
    self.数据[编号].气血=self.数据[编号].最大气血
  end
  发送数据(连接id,20,self:取存档数据(编号))
  if self.数据[编号].认证码==玩家数据[id].角色.数据.参战宝宝.认证码 then
    玩家数据[id].角色.数据.参战宝宝={}
    玩家数据[id].角色.数据.参战宝宝=table.loadstring(table.tostring(self:取存档数据(编号)))
    玩家数据[id].角色.数据.参战信息=1
    self.数据[编号].参战信息=1
    发送数据(连接id,18,玩家数据[id].角色.数据.参战宝宝)
  end
end

function 孩子系统:加蓝处理(编号,数额,连接id,id)
  self.数据[编号].魔法=self.数据[编号].魔法+数额
  if self.数据[编号].魔法>self.数据[编号].最大魔法 then
    self.数据[编号].魔法=self.数据[编号].最大魔法
  end
  发送数据(连接id,20,self:取存档数据(编号))
  if self.数据[编号].认证码==玩家数据[id].角色.数据.参战宝宝.认证码 then
    玩家数据[id].角色.数据.参战宝宝={}
    玩家数据[id].角色.数据.参战宝宝=table.loadstring(table.tostring(self:取存档数据(编号)))
    玩家数据[id].角色.数据.参战信息=1
    self.数据[编号].参战信息=1
    发送数据(连接id,18,玩家数据[id].角色.数据.参战宝宝)
  end
end

function 孩子系统:召唤兽染色(连接id,序号,id,内容)
  local 编号=self:取编号(内容.序列)
  local 染色银子消耗 = 100000000
  if 取银子(id) < 染色银子消耗 then
      常规提示(id,"你身上的银子不够染色哦，染色一次需要花费2亿的银两")
      return
  end
  玩家数据[id].角色:扣除银子(染色银子消耗,0,0,"召唤兽染色",1)
  if self.数据[编号].染色方案==nil then
      self.数据[编号].染色方案=0
  end
  if self.数据[编号].染色组==nil then
      self.数据[编号].染色组={}
  end
  self.数据[编号].染色方案 = 内容.序列1
  self.数据[编号].染色组={}
  self.数据[编号].染色组[1] = 内容.序列2
  self.数据[编号].染色组[2] = 内容.序列3
  self.数据[编号].染色组[3] = 内容.序列4
  常规提示(id,"#Y恭喜你，召唤兽染色成功！换个颜色换个心情")
  发送数据(连接id,16,self.数据)
  发送数据(连接id,20,self:取存档数据(编号))
end




function 孩子系统:加点处理(连接id,序号,id,点数)
  local 临时编号=self:取编号(点数.序列)
  local 监控开关 = false
  if 临时编号==0 then
    常规提示(id,"你没有这只召唤兽")
    return
  else
    local 总数点=0
    总数点=点数.力量+点数.体质+点数.耐力+点数.魔力+点数.敏捷
    if 总数点>self.数据[临时编号].潜力 then
      常规提示(id,"该召唤兽没有那么多的可分配属性点")
      return
    end
    if 点数.力量<0 or 点数.魔力<0 or 点数.耐力<0 or 点数.体质<0 or 点数.敏捷<0 or  点数.力量>self.数据[临时编号].潜力 or 点数.魔力>self.数据[临时编号].潜力 or 点数.耐力>self.数据[临时编号].潜力 or 点数.体质>self.数据[临时编号].潜力 or 点数.敏捷>self.数据[临时编号].潜力 then
      监控开关 = true
    end
    if 监控开关 then
      发送数据(玩家数据[id].连接id,998,"请注意你的角色异常！已经对你进行封IP")
      __S服务:输出("玩家"..id.." 非法修改数据警告!属性修改")
      写配置("./ip封禁.ini","ip",玩家数据[id].ip,1)
      写配置("./ip封禁.ini","ip",玩家数据[id].ip.." 非法修改数据警告!修改宠物属性,玩家ID:"..id,1)
      __S服务:断开连接(玩家数据[id].连接id)
      return 0
    end
    self.数据[临时编号].力量=self.数据[临时编号].力量+点数.力量
    self.数据[临时编号].魔力=self.数据[临时编号].魔力+点数.魔力
    self.数据[临时编号].耐力=self.数据[临时编号].耐力+点数.耐力
    self.数据[临时编号].体质=self.数据[临时编号].体质+点数.体质
    self.数据[临时编号].敏捷=self.数据[临时编号].敏捷+点数.敏捷
    self.数据[临时编号].潜力=self.数据[临时编号].潜力-总数点
    self:刷新信息(临时编号,"1")
    发送数据(连接id,20,self:取存档数据(临时编号))
    if self.数据[临时编号].认证码==玩家数据[id].角色.数据.参战宝宝.认证码 then
      玩家数据[id].角色.数据.参战宝宝={}
      玩家数据[id].角色.数据.参战宝宝=table.loadstring(table.tostring(self:取存档数据(临时编号)))
      玩家数据[id].角色.数据.参战信息=1
      self.数据[临时编号].参战信息=1
      发送数据(连接id,18,玩家数据[id].角色.数据.参战宝宝)
    end
  end
end

function 孩子系统:改名处理(连接id,序号,id,序列,名称)
  local 临时编号=self:取编号(序列)
  if 临时编号==0 then
    常规提示(id,"你没有这只召唤兽")
    return
  elseif 名称=="" then
    常规提示(id,"名称不能为空")
    return
  elseif #名称>12 then
    常规提示(id,"名称太长了，换个试试！")
    return
  else
    self.数据[临时编号].名称=名称
    常规提示(id,"召唤兽名称修改成功！")
    发送数据(连接id,19,{序列=临时编号,名称=名称})
  end
end

function 孩子系统:死亡处理(认证码)
  -- local 编号=self:取编号(认证码)
  -- self.数据[编号].寿命 = self.数据[编号].寿命 - 25
  -- if self.数据[编号].寿命<=0 then
  --     self.数据[编号].寿命 = 0
  -- end
  -- if self.数据[编号].寿命 <= 50 then
  --   self.数据[编号].参战信息=nil
  --   常规提示(玩家数据[self.数字id].连接id,"该孩子与您的亲密度过低将无法参加战斗")
  -- end
end

function 孩子系统:刷新信息1(认证码,参数)
  local 编号=self:取编号(认证码)
  if 编号 == 0 then
    return
  end
  self:刷新信息(编号,参数)
  if self.数据[编号].参战信息~=nil then
    玩家数据[self.数字id].角色.数据.参战信息 = nil
    玩家数据[self.数字id].角色.数据.参战宝宝 = {}
    self.数据[编号].参战信息 = nil
    发送数据(玩家数据[self.数字id].连接id,18,玩家数据[self.数字id].角色.数据.参战宝宝)
  end
  self:升级(编号,self.数字id)
end

function 孩子系统:取编号(认证码)
  for n=1,#self.数据 do
    if self.数据[n].认证码==认证码 then
      return n
    end
  end
  return 0
end

function 孩子系统:飞升降级处理(id)
  for n=1,#self.数据 do
    if self.数据[n].等级>=玩家数据[id].角色.数据.等级+10 then
        self.降低等级=self.数据[n].等级-10-玩家数据[id].角色.数据.等级
        self:降级(self.降低等级,n)
    end
  end
end

function 孩子系统:更新(dt) end
function 孩子系统:显示(x,y) end

function 孩子系统:打书概率(v)
  local g = 取随机数(1,5)
  if v == 0 or v == 1 then
      return true
  elseif v == 2 then
    g = 取随机数(1,10)
    if g == 1 then
      return true
    end
  elseif v == 3 then
    g = 取随机数(1,15)
    if g == 1 then
      return true
    end
  elseif v == 4 then
    g = 取随机数(1,450)
    if g <= 10 then
      return true
    end
  elseif v == 5 then
    g = 取随机数(1,500)
    if g <= 10 then
      return true
    end
  elseif v == 6 then
    g = 取随机数(1,550)
    if g <= 10 then
      return true
    end
  elseif v == 7 then
    g = 取随机数(1,600)
    if g <= 10 then
      return true
    end
  elseif v == 8 then
    g = 取随机数(1,650)
    if g <= 10 then
      return true
    end
  elseif v == 9 then
    g = 取随机数(1,700)
    if g <= 10 then
      return true
    end
  elseif v == 10 then
    g = 取随机数(1,750)
    if g <= 10 then
      return true
    end
  elseif v == 11 then
    g = 取随机数(1,800)
    if g <= 10 then
      return true
    end
  end
  return false
end

function 孩子系统:取经验(id,lv)
  local exp={}
  if id==1 then
    exp={
      40,110,237,450,779,1252,1898,2745,3822,5159,6784,8726,11013,13674,16739,20236,24194,28641,33606,39119,45208,
      51902,55229,67218,75899,85300,95450,106377,118110,130679,144112,158438,173685,189882,207059,225244,244466,264753,
      286134,308639,332296,357134,383181,410466,439019,468868,500042,532569,566478,601799,638560,676790,716517,757770,
      800579,844972,890978,938625,987942,1038959,1091704,1146206,1202493,1260594,1320539,1382356,1446074,1511721,1579326,
      1648919,1720528,1794182,1869909,1947738,2027699,2109820,2194130,2280657,2369431,2460479,2553832,2649518,2747565,
      2848003,2950859,3056164,3163946,3274233,3387055,3502439,3620416,3741014,3864261,3990187,4118819,4250188,4384322,
      4521249,4660999,4803599,4998571,5199419,5406260,5619213,5838397,6063933,6295941,6534544,6779867,7032035,7291172,
      7557407,7830869,8111686,8399990,8695912,8999586,9311145,9630726,9958463,10294496,10638964,10992005,11353761,11724374,
      12103988,12492748,12890799,13298287,13715362,14142172,14578867,15025600,15482522,15949788,16427552,16915970,17415202,
      17925402,18446732,18979354,19523428,20079116,20646584,21225998,43635044,44842648,46075148,47332886,48616200,74888148,
      76891401,78934581,81018219,83142835,85308969,87977421,89767944,92061870,146148764,150094780,154147340,158309318,
      162583669,166973428,171481711,176111717,180866734,185780135,240602904,533679362,819407100,1118169947, 1430306664,
      1756161225,2096082853
    }
  else
    exp={
      50,200,450,800,1250,1800,2450,3250,4050,5000,6050,7200,8450,9800,11250,12800,14450,16200,18050,20000,22050,24200,
      26450,28800,31250,33800,36450,39200,42050,45000,48050,51200,54450,57800,61250,64800,68450,72200,76050,80000,84050,
      88200,92450,96800,101250,105800,110450,115200,120050,125000,130050,135200,140450,145800,151250,156800,162450,
      168200,174050,180000,186050,192200,198450,204800,211250,217800,224450,231200,238050,245000,252050,259200,266450,
      273800,281250,288800,296450,304200,312050,320000,328050,336200,344450,352800,361250,369800,378450,387200,396050,
      405000,414050,423200,432450,441800,451250,460800,470450,480200,490050,500000,510050,520200,530450,540800,551250,
      561800,572450,583200,594050,605000,616050,627200,638450,649800,661250,672800,684450,696200,708050,720000,732050,
      744200,756450,768800,781250,793800,806450,819200,832050,845000,858050,871200,884450,897800,911250,924800,938450,
      952200,966050,980000,994050,1008200,1022450,1036800,1051250,1065800,1080450,1095200,1110050,1125000,1140050,1155200,
      1170450,1185800,1201250,1216800,1232450,1248200,1264050,1280000,1300000,1340000,1380000,1420000,1460000,1500000,1540000,
      1580000,1700000,1780000,1820000,1940000,2400000,2880000,3220000,4020000,4220000,4420000,4620000,5220000,5820000,6220000,
      7020000,8020000,9020000
    }
  end
  return exp[lv+1]
end
return 孩子系统